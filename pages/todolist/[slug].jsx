import Head from 'next/head'
import React, { useState } from 'react'
import Navbar from '../../components/Navbar'
import styles from "../../styles/Todo.module.css";
import { AiFillPlusCircle, AiOutlineForm } from "react-icons/ai";
import { IoMdCheckmarkCircle } from "react-icons/io";
import Users from "../../models/UserSchema.js"
import mongoose from 'mongoose';
import { useRouter } from 'next/router';
import { toast, ToastContainer } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';

const Todolist = ({ alllist, usermail }) => {


    const [list, setlist] = useState({ email: "", note: "" });
    const [listtext, setlisttext] = useState({ todotext: "" });
    const [oldproducts, setoldproducts] = useState([]);
    const [newlist, setnewlist] = useState([]);
    const router = useRouter();

    const refreshData = () => {
        router.replace(router.asPath);
    }



    const addproducttocart = async () => {



        list.email = usermail;

        // list.todolist = alllist.todolist.concat(listtext);
        list.note = listtext.todotext;

        fetch(`${process.env.NEXT_PUBLIC_APP_URL}/api/products/updatetodo`, {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify(list)
        })
            .then(res => res.json())
            .then(data => {
                console.log(data);
            }
            )
            .catch(err => console.log(err));




        // setoldproducts([]);




        toast('ðŸŒˆ Added to list !', {
            position: "top-right",
            autoClose: 3000,
            hideProgressBar: false,
            closeOnClick: true,
            pauseOnHover: true,
            draggable: true,
            progress: undefined,
            onClose: () => {
                refreshData();
                console.log(alllist.todolist);

            }
        });
    }

    const handleChange = (e) => {
        setlisttext({ ...listtext, [e.target.name]: e.target.value });

    };





    const removetodo = async (note) => {



        list.email = usermail;

        list.note = note;

        fetch(`${process.env.NEXT_PUBLIC_APP_URL}/api/products/removetodolist`, {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify(list)
        })
            .then(res => res.json())
            .then(data => {
                console.log(data);
            }
            )
            .catch(err => console.log(err));




        // setoldproducts([]);




        toast('ðŸŒˆ Completed !', {
            position: "top-right",
            autoClose: 3000,
            hideProgressBar: false,
            closeOnClick: true,
            pauseOnHover: true,
            draggable: true,
            progress: undefined,
            onClose: () => {
                refreshData();
                console.log(alllist.todolist);

            }
        });
    }




    return (
        <>

            <Head>
                <title>Seach | To-Do</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <div className="container-fluid">

                <Navbar />

            </div>
            <ToastContainer
                position="top-right"
                autoClose={5000}
                hideProgressBar={false}
                newestOnTop={false}
                closeOnClick
                rtl={false}
                pauseOnFocusLoss
                draggable
                pauseOnHover
            />
            <div className="container">

                <div className={styles.todo_formparent1}>
                    <AiFillPlusCircle style={{ fontSize: "2.5rem", color: "#ec3750", marginRight: "2rem" }} onClick={() => { addproducttocart() }} />

                    <input type="text" className={`form-control ${styles.workform1} `} placeholder="Add your work here !" name='todotext' value={listtext.todotext} onChange={handleChange} />
                </div>

                <br /><br />

                <h3 className={styles.todo_header} >Here&apos;s your ToDo List : </h3>





                {alllist.todolist.map((item, index) => {
                    return (<div className={styles.todo_formparent2} key={index}>


                        <IoMdCheckmarkCircle style={{ fontSize: "2rem", color: "#ec3750", marginRight: "1rem" }} onClick={() => { removetodo(item) }} />


                        <p className={`${styles.workform2}`}> {item}</p>
                    </div>)
                })}



            </div>

        </>
    )
}

export async function getServerSideProps(context) {

    if (!mongoose.connections[0].readyState) {
        await mongoose.connect(process.env.MONGO_URI);
    }


    let alllist = await Users.findOne({ email: context.query.slug });
    let usermail = context.query.slug;

    // res.status(200).json({ allproducts });
    return {
        props: { alllist: JSON.parse(JSON.stringify(alllist)), usermail }, // will be passed to the page component as props
    }
}

export default Todolist